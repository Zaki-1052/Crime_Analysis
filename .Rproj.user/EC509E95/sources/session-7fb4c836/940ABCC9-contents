# 01_process_political_data.R (County-level Data)
# Purpose: Process county-level voting data to get state-level political leaning

# Load required libraries
library(tidyverse)

# Create directories if they don't exist
dir.create("data/processed", recursive = TRUE, showWarnings = FALSE)

# Read the county-level election data
election_data <- read_csv("data/political/election_data.csv")

# Check how many states we have in the dataset
state_count <- length(unique(election_data$state_name))
cat("Number of unique states in dataset:", state_count, "\n")

# Display some of the states to check coverage
unique_states <- unique(election_data$state_name)
cat("First few states:", paste(head(sort(unique_states)), collapse=", "), "...\n")

# Aggregate votes by state
state_votes <- election_data %>%
  # Group by state name
  group_by(state_name) %>%
  # Sum votes by party for each state
  summarize(
    total_rep_votes = sum(votes_gop, na.rm = TRUE),
    total_dem_votes = sum(votes_dem, na.rm = TRUE),
    total_votes = sum(total_votes, na.rm = TRUE)
  ) %>%
  # Calculate percentage metrics
  mutate(
    pct_rep = total_rep_votes / total_votes,
    pct_dem = total_dem_votes / total_votes,
    political_leaning = pct_rep - pct_dem  # Positive values = more Republican
  )

# Check how many states we have after aggregation
cat("Number of states after aggregation:", nrow(state_votes), "\n")

# Print a summary to check the results
print(head(state_votes))

# Final dataset for saving
final_state_votes <- state_votes %>%
  # Rename state_name to state for consistency with other datasets
  rename(state = state_name)

# Save the processed data
write_csv(final_state_votes, "data/processed/state_political_leaning.csv")

cat("Political data processing complete.\n")